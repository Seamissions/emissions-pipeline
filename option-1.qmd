---
title: "Option 1"
author: "Carmen Hoyt"
date: last-modified
format:
  html:
      toc: true
      code-fold: true
editor: visual
execute:
  warning: false
  messages: false
editor_options: 
  chunk_output_type: console
---

# Option 1:

- For each year, calculate total **non-broadcasting** emissions for each FAO region. 
- Then divy that up to *all* fisheries that report catch in that region (proportionally by the amount of catch in each fishery). 
- Assumption: Within an FAO region, the non-broadcasting emissions are spread proportionally across *all* fisheries and countries within that region *by catch*.

Questions:

- does it make sense that in a region, in a year, one country is only landing one species of fish?

## Load Packages

```{r}
#| code-summary: Load Packages
library(tidyverse)
library(janitor)
library(here)
library(dplyr)
```

## Load Data

```{r}
#| code-summary: Load Data
emissions_partitioned_grouped <- read_csv(file.path("/capstone/seamissions/checkpoint/emissions_partitioned_grouped.csv"), show_col_types = FALSE) %>%
  filter(!flag == "DARK")
fao_catch <- read_csv(file.path("/capstone/seamissions/checkpoint/fao_catch_cleaned.csv"), show_col_types = FALSE)
```

## Partition Emissions by Region, Bind

```{r}
#| code-summary: Distribute Emissions
# Define regions
regions <- c(18, 21, 27, 31, 34, 47, 48, 51, 57, 58, 61, 67, 71, 77, 81, 87, 88)

# Create empty vector to append Region #
option_1 <- vector("list", length = length(regions))

# Partition emissions
for (i in seq_along(regions)){
  
  # Make list of flags in FAO catch data by Region #
  fao_catch_flags <- fao_catch %>%
    filter(zone == regions[i])
  
  fao_catch_flags <- unique(fao_catch_flags$flag)
  
  # Make a list of flags in emissions data by Region #
  emissions_flags <- emissions_partitioned_grouped %>%
    filter(zone == regions[i])
  
  emissions_flags <- unique(emissions_flags$flag) # TABLE 2: flags with BROADCASTING emissions
  
  # Make a list of flags with non-broadcasting emissions ONLY by Region # (those flags in FAO catch but not in emissions)
  non_broad_only_flags <- setdiff(fao_catch_flags, emissions_flags)
  
  # Summarise non-broadcasting emissions by Region #
  fao_summary_non_broadcasting <- emissions_partitioned_grouped %>%
    # Select non-broadcasting emissions
    filter(flag == "DARK") %>%
    # Rename columns for non-broadcasting emissions
    mutate(non_broad_co2 = co2,
           non_broad_ch4 = ch4,
           non_broad_n2o = n2o,
           non_broad_nox = nox,
           non_broad_sox = sox,
           non_broad_co = co,
           non_broad_vocs = vocs,
           non_broad_pm2_5 = pm2_5,
           non_broad_pm10 = pm10) %>%
    # Keep only desired columns
    select(zone, 
           year, 
           non_broad_co2,
           non_broad_ch4,
           non_broad_n2o,
           non_broad_nox,
           non_broad_sox,
           non_broad_co,
           non_broad_vocs,
           non_broad_pm2_5,
           non_broad_pm10)
  
  # -------- TABLE 1 --------
  # 1.1 All flags reporting FAO catch in Region #
  total_region_catch <- fao_catch %>%
    filter(zone == regions[i]) %>%
    group_by(zone, year) %>%
    # total catch by zone and year
    mutate(total_fao_catch = sum(fao_catch_tons)) %>%
    # prop catch by zone and year
    mutate(prop_fao_catch = fao_catch_tons/total_fao_catch) %>%
    ungroup()
  
  # 1.2 Non-broadcasting emissions in Region #
  fao_summary_non_broadcasting <- fao_summary_non_broadcasting %>%
    filter(zone == regions[i]) %>%
    # FAO data doesn't go past 2022
    filter(year <= 2022)
  
  # TABLE 1: Allocate non-broadcasting emissions to FAO reporting countries by Region #
  total_region_non_broad_allocation <- left_join(total_region_catch, fao_summary_non_broadcasting, by = c("zone", "year")) %>%
    mutate(dist_non_broad_co2_mt = prop_fao_catch * non_broad_co2,
           dist_non_broad_ch4_mt = prop_fao_catch * non_broad_ch4,
           dist_non_broad_n2o_mt = prop_fao_catch * non_broad_n2o,
           dist_non_broad_nox_mt = prop_fao_catch * non_broad_nox,
           dist_non_broad_sox_mt = prop_fao_catch * non_broad_sox,
           dist_non_broad_co_mt = prop_fao_catch * non_broad_co,
           dist_non_broad_vocs_mt = prop_fao_catch * non_broad_vocs,
           dist_non_broad_pm2_5_mt = prop_fao_catch * non_broad_pm2_5,
           dist_non_broad_pm10_mt = prop_fao_catch * non_broad_pm10)
  
  # Keep only desired columns
  total_region_non_broad_allocation <- total_region_non_broad_allocation %>%
    select(year,
           zone,
           flag,
           scientific_name,
           fao_catch_tons,
           c(colnames(total_region_non_broad_allocation)[str_detect(colnames(total_region_non_broad_allocation), "dist")]))
  
  # Account for emissions transfer in TABLE 1
  before <- sum(fao_summary_non_broadcasting$non_broad_co2, na.rm = TRUE) 
  after <- sum(total_region_non_broad_allocation$dist_non_broad_co2_mt, na.rm = TRUE) 
  
  if(before != after) {
    warning(paste0("Non-broadcasting emissions lost during allocation to FAO reporting countries in Region ", regions[i], "."))
  }
  
  # -------- TABLE 2 --------
  # TABLE 2: Flags with broadcasting emissions by Region #
  emissions_partitioned <- emissions_partitioned_grouped %>%
    # Remove "DARK" because allocated in non_broadcasting summary above
    filter(!flag == "DARK") %>%
    # Filter for Region #
    filter(zone == regions[i]) %>%
    ungroup()
  
  # -------- TABLE 3 --------
  # TABLE 3: Full join Tables 1 and 2 (to not lose flags with non-broad emissions but no broad emissions)
  total_region_emissions <- full_join(emissions_partitioned, total_region_non_broad_allocation, by = c("zone", "year", "flag")) %>%
    mutate(total_co2_mt = rowSums(across(c(co2, dist_non_broad_co2_mt)), na.rm = TRUE),
           total_ch4_mt = rowSums(across(c(ch4, dist_non_broad_ch4_mt)), na.rm = TRUE),
           total_n2o_mt = rowSums(across(c(n2o, dist_non_broad_n2o_mt)), na.rm = TRUE),
           total_nox_mt = rowSums(across(c(nox, dist_non_broad_nox_mt)), na.rm = TRUE),
           total_sox_mt = rowSums(across(c(sox, dist_non_broad_sox_mt)), na.rm = TRUE),
           total_co_mt = rowSums(across(c(co, dist_non_broad_co_mt)), na.rm = TRUE),
           total_vocs_mt = rowSums(across(c(vocs, dist_non_broad_vocs_mt)), na.rm = TRUE),
           total_pm2_5_mt = rowSums(across(c(pm2_5, dist_non_broad_pm2_5_mt)), na.rm = TRUE),
           total_pm10_mt = rowSums(across(c(pm10, dist_non_broad_pm10_mt)), na.rm = TRUE))
  
  # Keep desired columns
  total_region_emissions <- total_region_emissions %>%
    select(year,
           zone,
           flag,
           scientific_name,
           fao_catch_tons,
           c(colnames(total_region_emissions)[str_detect(colnames(total_region_emissions), "total")])
    )
  
  # BUILD LOST FLAG WARNING (?)
  if(all(!c(emissions_flags, non_broad_only_flags) %in% c(unique(total_region_emissions$flag)))) {
    warning("Flags don't add up.")
  }
  
  # Account for emissions after full join
  before <- sum(emissions_partitioned$co2, na.rm = TRUE) + sum(fao_summary_non_broadcasting$non_broad_co2, na.rm = TRUE)
  after <- sum(total_region_emissions$total_co2_mt, na.rm = TRUE) 
  
  if(before != after) {
    warning(paste0("Emissions lost on full join for Region ", regions[i], "."))
  }
  
  # Add to list
  option_1[[i]] <- total_region_emissions
  
}

# Full emissions dataset
full_emissions_fao <- bind_rows(option_1)
```


