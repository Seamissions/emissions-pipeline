---
title: "Vessel Flag ID"
author: "Carmen Hoyt"
date: last-modified
format:
  html:
      toc: true
      code-fold: true
editor: visual
execute:
  warning: false
  messages: false
editor_options: 
  chunk_output_type: console
---

Load Packages

```{r}
#| code-summary: Expand code
library(tidyverse)
library(janitor)
library(here)
```

Import Data

```{r}
#| code-summary: Expand code
flag_data <- read_csv("/capstone/seamissions/data/meds_meds_capstone_annual_vessel_flag_country_emissions_v20241121.csv", show_col_types = FALSE)
```

1.  Full Dataset Mismatch

```{r}
#| code-summary: Expand code
# investigate matching flags vs. non-matching flags
flag_match <- flag_data %>%
  # fill `top_visit` NA values with `flag` values (**assumption**)
  mutate(top_visited_country_iso3 = ifelse(is.na(top_visited_country_iso3), flag, top_visited_country_iso3)) %>%
  mutate(match = case_when(flag == top_visited_country_iso3 ~ TRUE,
                           flag != top_visited_country_iso3 ~ FALSE))

# backfill `flag` NA values with `top_visit`?
flag_match %>%
  filter(is.na(flag))

total_match <- flag_match %>%
  group_by(match) %>%
  summarise(counts = n())
```

2.  Full Dataset Emissions

```{r}
#| code-summary: Expand code
year_emissions <- flag_match %>%
  group_by(year, match) %>%
  summarise(emissions = sum(emissions_co2_mt, na.rm = TRUE)) %>%
  group_by(year) %>%
  mutate(total_emissions = sum(emissions, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(prop = round(emissions/total_emissions*100, 1)) %>%
  select(-total_emissions)
```

3.  Emissions to Different Country

```{r}
#| code-summary: Expand code
to_country_emissions <- flag_match %>%
  group_by(flag, match) %>%
  summarise(vessels = n(),
            emissions = sum(emissions_co2_mt, na.rm = TRUE)) %>%
  group_by(flag) %>%
  mutate(total_emissions = sum(emissions, na.rm = TRUE)) %>%
  mutate(percent = round(emissions/total_emissions*100, 1)) %>%
  filter(match == FALSE) %>%
  ungroup()

to_country_emissions %>%
  filter(flag == "PAN")
```

4.  Emissions from Different Country

```{r}
#| code-summary: Expand code
from_country_emissions <- flag_match %>%
  group_by(top_visited_country_iso3, match) %>%
  summarise(vessels = n(),
            emissions = sum(emissions_co2_mt, na.rm = TRUE)) %>%
  group_by(top_visited_country_iso3) %>%
  mutate(total_emissions = sum(emissions, na.rm = TRUE)) %>%
  mutate(percent = round(emissions/total_emissions*100, 1)) %>%
  filter(match == FALSE) %>%
  ungroup()
```

Visualize

```{r}
#| code-summary: Expand code
# top countries where emissions (prop) end up somewhere else (are flags of convenience)
to_country_emissions %>%
  arrange(desc(percent)) %>%
  filter(percent >= 99) %>%
ggplot(aes(x = reorder(flag, percent), y = percent)) +
  geom_col() +
  coord_flip() +
  labs(title = "Emissions Leaving (Overestimation)",
    y = "Percent Emissions") +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()
  )

# top countries where emissions (tons) end up somewhere else
to_country_emissions %>%
  arrange(desc(emissions)) %>%
  slice(1:10) %>%
ggplot(aes(x = reorder(flag, emissions), y = emissions)) +
  geom_col() +
  coord_flip() +
  labs(title = "Emissions Leaving (Overestimation)",
       y = "Emissions (Metric Tons)") +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()
  )

# top countries where emissions (prop) come from a different flag (utilize flags of convenience)
from_country_emissions %>%
  arrange(desc(percent)) %>%
  filter(percent >= 99) %>%
  ggplot(aes(x = reorder(top_visited_country_iso3, percent), y = percent)) +
  geom_col() +
  coord_flip() +
  labs(title = "Emissions Coming (Underestimation)",
    y = "Percent Emissions") +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()
  )

# top countries where emissions (tons) come from a different flag (utilize flags of convenience)
from_country_emissions %>%
  arrange(desc(emissions)) %>%
  slice(1:10) %>%
ggplot(aes(x = reorder(top_visited_country_iso3, emissions), y = emissions)) +
  geom_col() +
  coord_flip() +
  labs(title = "Emissions Coming (Underestimation)",
       y = "Emissions (Metric Tons)") +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()
  )
```
