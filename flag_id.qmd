---
title: "Vessel Flag ID Analysis"
author: "Carmen Hoyt"
date: last-modified
format:
  html:
      toc: true
      code-fold: true
editor: visual
execute:
  warning: false
  messages: false
editor_options: 
  chunk_output_type: console
---

# About

This document analyzes the relationship between vessel's AIS flag assignments and the top country they visit. This analysis uses vessel-level data from emLab and Global Fishing Watch.

# Methods

## Load Packages

```{r}
#| code-summary: Load Packages
library(tidyverse)
library(janitor)
library(here)
```

## Import Data

```{r}
#| code-summary: Import Data
flag_data <- read_csv("/capstone/seamissions/data/meds_meds_capstone_annual_vessel_flag_country_emissions_v20241121.csv", show_col_types = FALSE)
```

## 1. Full Dataset Mismatch

Assess the AIS-flag assignment and top-visit mismatch for the dataset as a whole.

- TRUE = match
- FALSE = mismatch
- NA = No value in AIS-flag, cannot determine.

Assumption: where top-visit is NA, fill with AIS-flag value

This will start to give a sense of just how much of an issue this flagging issue could be.

```{r}
#| code-summary: Full Dataset Mismatch
# Investigate matching flags vs. non-matching flags
flag_match <- flag_data %>%
  # Fill `top_visit` NA values with `flag` values (**assumption**)
  mutate(top_visited_country_iso3 = ifelse(is.na(top_visited_country_iso3), flag, top_visited_country_iso3)) %>%
  mutate(match = case_when(flag == top_visited_country_iso3 ~ TRUE,
                           flag != top_visited_country_iso3 ~ FALSE))

# Backfill `flag` NA values with `top_visit`?
flag_match %>%
  filter(is.na(flag))

# Summarise counts for TRUE match, FALSE mismatch, and NA
total_match <- flag_match %>%
  group_by(match) %>%
  summarise(counts = n())

total_match
```

## 2.  Full Dataset Emissions

Summarise emissions by match (TRUE), mismatch (FALSE), and NA for each year and overall.

This will give us a sense of how much emissions on aggregate could be affected by this flagging issue.

```{r}
#| code-summary: Full Dataset Emissions
# Summarise emissions mismatch by year
year_emissions <- flag_match %>%
  group_by(year, match) %>%
  summarise(emissions = sum(emissions_co2_mt, na.rm = TRUE)) %>%
  group_by(year) %>%
  mutate(total_emissions = sum(emissions, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(prop = round(emissions/total_emissions*100, 1)) %>%
  select(-total_emissions)

year_emissions

# Summarise emissions mismatch overall
year_emissions_avg <- year_emissions %>%
  group_by(match) %>%
  summarise(avg = mean(prop))

year_emissions_avg
```

## 3. Overestimating Emissions

Emissions attributed to a AIS-flag that visit different top-country.

For each flag, summarize the fraction of emissions that end up in a different country (mismatch/FALSE), by year.

This will give us a sense of how much overestimation of emissions we are giving to that flag. 

Ex. If for the flag of Panama (PAN) 75% of emissions are from vessels that have a different home port country, this could mean that we are *overestimating* emissions for Panama by upwards of 75% due to flagging issues.

```{r}
#| code-summary: Overestimating Emissions
# Summarise emissions attributed to mismatch by flag (AIS-flag)
overestimation_emissions <- flag_match %>%
  group_by(flag, match) %>%
  summarise(vessels = n(),
            emissions = sum(emissions_co2_mt, na.rm = TRUE)) %>%
  group_by(flag) %>%
  mutate(total_emissions = sum(emissions, na.rm = TRUE)) %>%
  mutate(percent_emissions_leaving_by_flag = round(emissions/total_emissions*100, 1)) %>%
  filter(match == FALSE) %>%
  ungroup()

# Look at PAN
overestimation_emissions %>%
  filter(flag == "PAN")

# Save table
#write_csv(overestimation_emissions, file.path("/capstone/seamissions/checkpoint/overestimation_emissions.csv"))
```

## 4. Underestimating Emissions

Emissions for each top-visit country that come from a different AIS-flag. 

This will give us a sense of how much *underestimation* of emissions we are giving to each country that is visited

Assumption: Vessels landing in the port of a country also land catch there, and that catch gets reported by that country where it is landed in. 

Ex. If for the country of China 25% of emissions are from vessels that have a different AIS-flag, this could mean that we are *underestimating* emissions for China by upwards of 25% due to flagging issues.

```{r}
#| code-summary: Underestimating Emissions
# Summarise emissions attributed to mismatch by flag (top-country)
underestimation_emissions <- flag_match %>%
  group_by(top_visited_country_iso3, match) %>%
  summarise(vessels = n(),
            emissions = sum(emissions_co2_mt, na.rm = TRUE)) %>%
  group_by(top_visited_country_iso3) %>%
  mutate(total_emissions = sum(emissions, na.rm = TRUE)) %>%
  mutate(percent_emissions_coming_by_flag = round(emissions/total_emissions*100, 1)) %>%
  filter(match == FALSE) %>%
  rename(flag = top_visited_country_iso3) %>%
  ungroup()

# Look at CHN
underestimation_emissions %>%
  filter(flag == "CHN")

#write_csv(underestimation_emissions, file.path("/capstone/seamissions/checkpoint/underestimation_emissions.csv"))
```

## Visualize

```{r}
#| code-summary: Visualize
# Top countries where emissions (prop) end up somewhere else (are flags of convenience)
overestimation_emissions %>%
  arrange(desc(percent_emissions_leaving_by_flag)) %>%
  filter(percent_emissions_leaving_by_flag >= 99) %>%
ggplot(aes(x = reorder(flag, percent_emissions_leaving_by_flag), y = percent_emissions_leaving_by_flag)) +
  geom_col() +
  coord_flip() +
  labs(title = "Emissions Leaving (Overestimation)",
    y = "Percent Emissions") +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()
  )

# top countries where emissions (tons) end up somewhere else
overestimation_emissions %>%
  arrange(desc(emissions)) %>%
  slice(1:10) %>%
ggplot(aes(x = reorder(flag, emissions), y = emissions)) +
  geom_col() +
  coord_flip() +
  labs(title = "Emissions Leaving (Overestimation)",
       y = "Emissions (Metric Tons)") +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()
  )

# top countries where emissions (prop) come from a different flag (utilize flags of convenience)
underestimation_emissions %>%
  arrange(desc(percent_emissions_coming_by_flag)) %>%
  filter(percent_emissions_coming_by_flag >= 99) %>%
  ggplot(aes(x = reorder(flag, percent_emissions_coming_by_flag), y = percent_emissions_coming_by_flag)) +
  geom_col() +
  coord_flip() +
  labs(title = "Emissions Coming (Underestimation)",
    y = "Percent Emissions") +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()
  )

# top countries where emissions (tons) come from a different flag (utilize flags of convenience)
underestimation_emissions %>%
  arrange(desc(emissions)) %>%
  slice(1:10) %>%
ggplot(aes(x = reorder(flag, emissions), y = emissions)) +
  geom_col() +
  coord_flip() +
  labs(title = "Emissions Coming (Underestimation)",
       y = "Emissions (Metric Tons)") +
  theme_minimal() +
  theme(
    axis.title.y = element_blank()
  )
```
