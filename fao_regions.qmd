---
title: "FAO Regions"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(janitor)
library(here)
library(gghighlight)
library(lubridate)
library(ggwordcloud)
library(glue)
library(sf)
library(dplyr)
```

```{r}
# -------- EMISSIONS --------
# import emissions data
emissions <- read_csv(file.path("/capstone/seamissions/checkpoint/emissions.csv"))

# set to WGS (degrees) ?
emissions_sf <- emissions %>%
  # add lat and lon bin to preserve for merge 
  dplyr::mutate(lat = lat_bin, lon = lon_bin) %>%
  st_as_sf(coords = c("lon", "lat"), crs = 4326)  # equal earth 8857

# OR mollweide projection 54009 but not recognized
#mollweide_proj <- "+proj=moll +lon_0=0 +datum=WGS84 +units=m +no_defs"
#emissions_sf <- st_set_crs(emissions_sf, mollweide_proj) # transform?

# create grid throughout extent of emissions_sf
emissions_grid <- emissions_sf %>%
  st_make_grid(cellsize = c(1,1),
               what = "polygons") %>%
  st_sf() %>%
  st_make_valid()

# spatially join emissions data to the grid
emissions_grid_sf <- st_join(emissions_grid, emissions_sf, left = FALSE)

# -------- FAO REGIONS --------
# import regions data (set same crs)
fao_regions <- st_read(file.path("/capstone/seamissions/fao_region_shapefile")) %>%
  st_transform(st_crs(emissions_grid_sf)) %>%
  st_make_valid()

# confirm crs match
st_crs(emissions_grid_sf) == st_crs(fao_regions)

# -------- FAO CATCH --------
# import catch data
fao_catch <- read_csv(file.path("/capstone/seamissions/checkpoint/fao_catch.csv"))

# fao_catch <- read_csv(file.path("/capstone/seamissions/checkpoint/fao_catch.csv")) %>%
#   select(area_code,
#          period,
#          iso3_code,
#          official_name_en,
#          scientific_name,
#          value) %>%
#   rename(zone = area_code,
#          year = period,
#          flag = iso3_code,
#          catch = value) %>%
#   # filter for >2015
#   filter(year >= 2015) %>%
#   group_by(year, zone, flag, scientific_name, official_name_en) %>%
#   summarise(total_catch = sum(catch, na.rm = TRUE)) %>%
#   mutate(across(c(zone, year), as.factor))

# -------- CHECKPOINT --------
# save locally
#st_write(emissions_grid_sf, here("checkpoint", "emissions_grid_sf.gpkg"))

# save to server
#st_write(emissions_grid_sf, file.path("/capstone/seamissions/checkpoint/emissions_grid_sf.gpkg"))

#st_write(fao_regions, file.path("/capstone/seamissions/checkpoint/fao_regions/fao_regions.shp", delete_dsn = TRUE))
```

### Zone 31:

```{r}
# filter for zone 31
zone_31 <- fao_regions %>%
  filter(zone == 31)

# cut out grid cells that overlap with zone 31
emissions_zone_31 <- st_intersection(emissions_grid_sf, zone_31, sparse = FALSE)

# add area column
emissions_zone_31$area <- st_area(emissions_zone_31)

# look at area breakdown to see if makes sense (mostly 1s)
areas <- emissions_zone_31 %>%
  group_by(area) %>%
  summarise(count = n()) %>%
  arrange(desc(count))
```

```{r}
ggplot() +
  geom_sf(data = emissions_grid_sf, fill = NA, color = "blue") +
  geom_sf(data = zone_31, fill = NA, color = "red")

plot(zone_31)
#plot(emissions_grid_sf[""])

```


### Zone 41:



